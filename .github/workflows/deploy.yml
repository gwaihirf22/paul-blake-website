# .github/workflows/deploy.yml
name: Deploy to Unraid Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          load: true
          tags: |
            paul-blake-site:latest
            paul-blake-site:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Save Docker Image
        run: |
          docker save paul-blake-site:latest | gzip > paul-blake-site.tar.gz
          
      - name: Copy Docker Image to Unraid Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.UNRAID_HOST }}
          username: ${{ secrets.UNRAID_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "paul-blake-site.tar.gz"
          target: "/tmp/"
          
      - name: Deploy to Unraid Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.UNRAID_HOST }}
          username: ${{ secrets.UNRAID_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Load the Docker image from the tarball
            cd /tmp
            docker load < paul-blake-site.tar.gz
            rm -f paul-blake-site.tar.gz
            
            # Navigate to project directory and restart container
            cd /mnt/user/appdata/paul-blake-website/
            docker compose up -d
            
            # Clean up dangling images to save space
            docker rmi $(docker images -f "dangling=true" -q) 2>/dev/null || true
            
            echo "Deployment completed successfully!"
