# .github/workflows/deploy.yml
name: Deploy to Unraid Server
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: [self-hosted, linux, x64, unraid-paul-blake]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          load: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/paul-blake-site:latest
            ${{ secrets.DOCKER_USERNAME }}/paul-blake-site:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      # NEW STEP: Start SSH Agent and add private key
      - name: Start SSH Agent
        uses: webfactory/ssh-agent@v0.8.0 # Use a specific version for stability
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_BASE64 }} # This action handles base64 decoding directly
          # No passphrase needed as we generated with empty passphrase

      # NEW STEP: Deploy to Unraid Server (now using standard SSH commands via ssh-agent)
      - name: Deploy to Unraid Server
        run: |
          set -e # Exit immediately if a command exits with a non-zero status
          
          # Add Unraid host to known_hosts to prevent SSH prompt.
          # This is needed because the runner is a fresh VM each time.
          # ssh-keyscan outputs to stdout, so redirect it to the file.
          mkdir -p ~/.ssh # Ensure .ssh directory exists
          ssh-keyscan -H ${{ secrets.UNRAID_HOST }} >> ~/.ssh/known_hosts
          # Set proper permissions for known_hosts
          chmod 600 ~/.ssh/known_hosts
          
          # Use SSH to execute commands on Unraid.
          # The -A flag forwards the ssh-agent, but we use the key directly which is often simpler here.
          # ssh automatically uses keys added to ssh-agent if the host is in known_hosts.
          # -o StrictHostKeyChecking=no can be used if ssh-keyscan is problematic, but less secure.
          # For a self-hosted runner, StrictHostKeyChecking=yes is generally preferred after initial setup.
          # Let's use it for now as it's the most common robust way with webfactory/ssh-agent.
          ssh ${{ secrets.UNRAID_USERNAME }}@${{ secrets.UNRAID_HOST }} << 'EOF'
            # Navigate to project directory
            cd /mnt/user/appdata/paul-blake-website/
            
            # Pull the latest image from Docker Hub
            docker compose pull paul-blake-site
            
            # Start/restart container with new image
            docker compose up -d
            
            # Clean up dangling images to save space
            docker rmi $(docker images -f "dangling=true" -q) 2>/dev/null || true
            
            echo "Deployment completed successfully!"
          EOF
        shell: bash
        # No need for specific env variables for ssh-action as it's a 'run' step now
        # and secrets are referenced directly in the script via ${{ secrets.VAR }}
