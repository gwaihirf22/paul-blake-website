# .github/workflows/deploy.yml
name: Deploy to Unraid Server
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: [self-hosted, linux, x64, unraid-paul-blake]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          load: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/paul-blake-site:latest
            ${{ secrets.DOCKER_USERNAME }}/paul-blake-site:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      # REMOVE THE "Decode SSH Private Key" STEP ENTIRELY:
      # - name: Decode SSH Private Key
      #   run: |
      #     mkdir -p ~/.ssh
      #     chmod 700 ~/.ssh
      #     echo "${{ secrets.SSH_PRIVATE_KEY_BASE64 }}" | base64 -d > ~/.ssh/id_rsa_github_actions
      #     chmod 600 ~/.ssh/id_rsa_github_actions
      #   shell: bash
        
      - name: Deploy to Unraid Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.UNRAID_HOST }}
          username: ${{ secrets.UNRAID_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }} # <--- CHANGE THIS LINE BACK
          script: |
            # Navigate to project directory
            cd /mnt/user/appdata/paul-blake-website/
            
            # Pull the latest image from Docker Hub
            docker compose pull paul-blake-site
            
            # Start/restart container with new image
            docker compose up -d
            
            # Clean up dangling images to save space
            docker rmi $(docker images -f "dangling=true" -q) 2>/dev/null || true
            
            echo "Deployment completed successfully!"
