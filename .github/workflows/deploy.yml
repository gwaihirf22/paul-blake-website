name: Deploy to Unraid Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub (Optional)
        if: false  # Set to true if you want to push to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false  # Set to true if pushing to Docker Hub
          tags: |
            paul-blake-site:latest
            paul-blake-site:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Save Docker Image
        run: |
          docker save paul-blake-site:latest | gzip > paul-blake-site.tar.gz
          
      - name: Copy Docker Image to Unraid Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.UNRAID_HOST }}
          username: ${{ secrets.UNRAID_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "paul-blake-site.tar.gz"
          target: "/tmp/"
          
      - name: Deploy to Unraid Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.UNRAID_HOST }}
          username: ${{ secrets.UNRAID_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Load the new Docker image from the temporary file
            cd /tmp
            docker load < paul-blake-site.tar.gz
            
            # Navigate to project directory on Unraid
            cd /mnt/user/appdata/paul-blake-website/
            
            # Stop and restart the container with the new image.
            # 'docker compose up -d' will automatically stop and recreate the service if it exists,
            # ensuring it uses the newly loaded 'paul-blake-site:latest' image.
            docker compose up -d
            
            # Clean up the temporary image tarball
            rm -f /tmp/paul-blake-site.tar.gz
            
            # Optional (and safer) cleanup: Remove truly 'dangling' Docker images.
            # Dangling images are untagged layers that are no longer used by any containers.
            # This is generally safe as it only removes true 'garbage' from old builds/layers.
            # The '2>/dev/null || true' prevents the workflow from failing if no dangling images are found.
            docker rmi $(docker images -f "dangling=true" -q) 2>/dev/null || true
            
            echo "Deployment completed successfully!"